[{"categories":["日常"],"content":"9月13日，上海交通大学正式开学。早八的线性代数，十点的体育网课，一切都看起来非常对劲，作为新生，我们也准备好了正式学习的开始。 没有想到，这节早八是九月的最后一节线下课。 中午，我和隔壁2226班的负责人一起前往教材科结清了教材的款项，并冒着小雨步行来到了上院，准备上军事理论课。到达之后，发现里面空无一人，疑惑地坐下之后，打开微信，方才意识到问题所在。 新疆返沪，隐瞒病情，进校后核酸检测显阳性。 我们继续在上院听课，但一小时之后，便有老师来把我们叫回了寝室。 没有人在听课，路上或是匆匆离开的校外人员，或是排队囤货的同学老师，秋雨绵绵，颇有末日来临前的光景。 寝室里的食物不多，于是我和隔壁几个寝室的同学前去购买物资。大部分商店的库存已经在前几个小时内被扫荡一空，陈同学介绍的隐蔽的罗森虽然还有不少存货，品种却所剩无几。买完之后，小雨已经变成了大雨，我们一路踏着水坑，狼狈地回到了寝室。 从那之后，14天，我再没了自由。 刚开始的隔离可谓坐牢。紧急情况方才开始，隔离餐不及时，物资匮乏，餐食堪称极差。通知说封控两天，但两天后就变成了七天。 前两天的饭点甚至都非常离谱，最晚的午饭时间一度达到2点多。 我们在寝室里上着网课，除了刷视频和打游戏好像就再没了别的乐趣。刚刚认识不久的室友，也不像相处很久的兄弟一样能放开玩、彻夜聊天。 与此同时，每天都有密接被转运到隔离酒店，以及这些人所在寝室不断被封控。实际上，最终，只有一个寝室楼自始至终没有封控。我的不少同学和朋友也被转运，看到他们酒店里优越的住宿环境，我当时还一度有些羡慕。 与此同时，台风“梅花”强势在上海二次登陆。宿舍楼在暴风骤雨中岿然不动，但同学们的心态却愈发摇摇欲坠。 台风吹倒了楼下的一棵大树，砍树的声音在第二天把所有人吵醒。 这一天是9月15日，疯狂星期四，但是v不了50。 9月16日晚，封傻了的同学们在寝室楼间大声赞美复旦大学、同济大学、上海财经大学、华东师范大学等院校，并唱起歌曲。我拍下了这段视频： 视频拍摄于22:36,，18分钟后，也就是22:54，我接到了转运通知。这首《奇迹再现》仿佛是为我送行的绝唱。 为了预防马上转运，我很快收拾好了所有行李，然后躺在床上等通知，然而0点也没有电话打来，于是我准备先在寝室过了今晚。 第二天早上，我意料之中地看到了难得一见的红码。 有时间再继续写。 ","date":"2022-09-20","objectID":"/posts/%E9%9A%94%E7%A6%BB%E8%AE%B0/:0:0","tags":["疫情","隔离"],"title":"隔离记","uri":"/posts/%E9%9A%94%E7%A6%BB%E8%AE%B0/"},{"categories":["程序设计"],"content":"隔离在浦东的第二天，精神振奋且萎靡  ，百无聊赖，于是又登上洛谷开始新一次的C++康复训练。 题目本身比较简单，能够AC算法也容易想。但是正因为简单，这道题的解法拥有更强的开放性，研究起来也更加上头。 原题链接：P5461 赦免战俘 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn) ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:0:0","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"原题呈现 赦免战俘（洛谷月赛） ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:1:0","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"题目背景 借助反作弊系统，一些在月赛有抄袭作弊行为的选手被抓出来了！ ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:1:1","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"题目描述 现有 $2^n\\times 2^n (n\\le10)$ 名作弊者站成一个正方形方阵等候 kkksc03 的发落。kkksc03 决定赦免一些作弊者。他将正方形矩阵均分为 4 个更小的正方形矩阵，每个更小的矩阵的边长是原矩阵的一半。其中左上角那一个矩阵的所有作弊者都将得到赦免，剩下 3 个小矩阵中，每一个矩阵继续分为 4 个更小的矩阵，然后通过同样的方式赦免作弊者……直到矩阵无法再分下去为止。所有没有被赦免的作弊者都将被处以棕名处罚。 给出 $n$，请输出每名作弊者的命运，其中 0 代表被赦免，1 代表不被赦免。 ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:1:2","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"输入格式 一个整数 $n$。 ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:1:3","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"输出格式 $2^n \\times 2^n$ 的 01 矩阵，代表每个人是否被赦免。数字之间有一个空格。 ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:1:4","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"样例 #1 样例输入 #1 3 样例输出 #1 0 0 0 0 0 0 0 1\r0 0 0 0 0 0 1 1\r0 0 0 0 0 1 0 1\r0 0 0 0 1 1 1 1\r0 0 0 1 0 0 0 1\r0 0 1 1 0 0 1 1\r0 1 0 1 0 1 0 1\r1 1 1 1 1 1 1 1 ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:1:5","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"题解 ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:2:0","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"函数递归模拟 常规解法，一遍AC。开O2之后时间也比较充裕。 很容易想到的方法就是直接从原正方形开始，每次分成四个区域，把第一个区域的值赋为0，然后依次递归另外三个区域，直到递归到的正方形边长为1为止。 代码 #include\u003cbits/stdc++.h\u003e using namespace std; int n; bool remit[2000][2000]; void divide(int a,int x0,int y0) { if(a==1) return; //当不能再分的时候回退到上一层 a\u003e\u003e=1; for(int i=x0;i\u003cx0+a;i++) for(int j=y0;j\u003cy0+a;j++) remit[i][j]=0; //继续分下一层，递归 divide(a,x0+a,y0); divide(a,x0,y0+a); divide(a,x0+a,y0+a); return; } void output() //繁琐的输出，不想写进主函数 { for(int i=0;i\u003cn;i++){ for(int j=0;j\u003cn;j++){ cout\u003c\u003cremit[i][j]; if(j\u003cn-1) cout\u003c\u003c' '; } cout\u003c\u003cendl; } } int main() { cin\u003e\u003en; n=1\u003c\u003cn; memset(remit,1,sizeof(remit)); //初始化整个数组为1 divide(n,0,0); output(); return 0; } ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:2:1","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"数论（找规律） 从时间消耗和空间占用来看，这个算法应该是三个算法中最佳的。由于只和i和j的值有关，内存占用来到了惊人的371B。 注意到，这个输出的正方形一定是对称的。对称性是通向数学巧解的钥匙。我们标出每个战俘对应的行号和列号，再来观察一下这个输出： remit[][] 0 1 2 3 4 5 6 7 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 2 0 0 0 0 0 1 0 1 3 0 0 0 0 1 1 1 1 4 0 0 0 1 0 0 0 1 5 0 0 1 1 0 0 1 1 6 0 1 0 1 0 1 0 1 7 1 1 1 1 1 1 1 1 似乎还是不太明显 由于这个题目条件和2的乘方有很大关联，我们不妨试试吧行列号写成二进制： remit[][] 000 001 010 011 100 101 110 111 000 0 0 0 0 0 0 0 1 001 0 0 0 0 0 0 1 1 010 0 0 0 0 0 1 0 1 011 0 0 0 0 1 1 1 1 100 0 0 0 1 0 0 0 1 101 0 0 1 1 0 0 1 1 110 0 1 0 1 0 1 0 1 111 1 1 1 1 1 1 1 1 既然是二进制了，那就躲不开位运算。适当观察，可以发现，remit[i][j]的值由i和j决定。当i|j==111，也就是i|j==2^n-1，那么remit[i][j]=1，否则为0。 这个通过找规律观察出来的结论用数论证明也不难。读者自证 还是写一下，权当练习证明逻辑性罢 数学说明 欲证，即证$i|j$有任何一位为0时，remit[i][j]即为0。 $(i,j)$在边长为$2^k$的正方形（任意位置）的左上部分$\\Leftrightarrow [(i\\% (2^k))/2^{k-1}]=0$且$[(j\\% (2^k))/2^{k-1}]=0$，其中$\\%$代表前者对后者取余数。 而i的二进制表示中，$[(i\\% (2^k))/2^{k-1}]$表示的恰恰就是权值为$2^{k-1}$的那位。而$ [(i\\% (2^k))/2^{k-1}]=0$且$[(j\\% (2^k))/2^{k-1}]=0\\Leftrightarrow i|j$在这一位上是0。 所以，只需对每一个k都判断一遍该位是否i和j都为零即可。 反过来，当没有0时，就有$i|j=2^n-1$，根据这个式子判断，不需要循环，更加优美。 代码 #include\u003cbits/stdc++.h\u003e using namespace std; int n; int main() { cin\u003e\u003en; n=1\u003c\u003cn; //预先处理n的值，简化后续代码 因此注意后续代码中n就是原来的2^n-1 for(int i=0;i\u003cn;i++) { for(int j=0;j\u003cn;j++) { bool tmp=(i|j)!=(n-1)?0:1; //用一下单行if XD 看着更简洁点 if(j\u003cn-1) cout\u003c\u003ctmp\u003c\u003c' '; //听说洛谷现在已经不查行末空格的问题了，不知道是不是真的 else cout\u003c\u003ctmp; } cout\u003c\u003cendl; } return 0; } ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:2:2","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"类杨辉三角（转自这篇题解） 时间复杂度和法二几乎一样，但是相比法二空间占用更大，需要开数组。 其实和法二的核心是一样的，只是用一个更常见的模型套了一下，可能会更好理解和运用。 每一个数字都是它上方数字加上右上方数字再模2。 其实就是不进位加法，异或一下就好了。 代码（经过微调） #include\u003cbits/stdc++.h\u003e #define re register using namespace std; int n; int a[1234][1234]; int main() { scanf(\"%d\",\u0026n); n = (1\u003c\u003cn); a[0][n+1] = 1; for(re int i=1;i\u003c=n;++i) { for(re int j=1;j\u003c=n;++j) { a[i][j] = a[i-1][j] ^ a[i-1][j+1]; printf(\"%d \",a[i][j]); } printf(\"\\n\"); } return 0; } ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:2:3","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":null,"content":" 你好  我是Andreo Yang，现在就读于上海交通大学电子信息与电气工程学院2022级，平时喜欢弹钢琴 但是交大琴房实在订不到 ，打球，还偶尔录MC视频，搞一下后期，发到我的bilibili上 。 虽然是公开的博客，但是由于不打算搞SEO，几乎也是私人的空间啦。能找到这里的你确实不容易，如果想交个朋友，在首页有我的社交网站链接，随时来打扰 做个人博客的想法我从初一就有了，可惜文澜中学拱墅监狱没有给我太多自由发展的机会。断断续续直到初二，才用Github Pages  做出了第一个博客（也是厉害 只用github都行）。初三时接触了Hexo，使用mellow主题搭建了一个现在看来确实像模像样的博客，并且也写了几篇洛谷的题解。 高中时常常间歇性发Hexo瘾，有一下没一下地更新网站、换主题、折腾CSS。先后用过Vexo，Melody，Butterfly等三个主题，也留下了几十篇课内外的整理、思考。至于我现在为什么归档了之前的博客，换用了新的框架，都写在这里啦。  希望你在我的博客逛得开心！也欢迎在下方交流评论  或者添加友链哦 ","date":"2022-09-16","objectID":"/about/:0:0","tags":null,"title":"About Me","uri":"/about/"},{"categories":null,"content":"\u003cno value\u003e's friends","date":"2022-09-16","objectID":"/friends/","tags":null,"title":"Friends","uri":"/friends/"},{"categories":null,"content":" 欢迎在下方留言交换友链！ 交换格式： - nickname: #昵称 avatar: #头像链接 url: #个人网站地址 description: #简短的网站介绍 ","date":"2022-09-16","objectID":"/friends/:0:0","tags":null,"title":"Friends","uri":"/friends/"},{"categories":["日常"],"content":"高三，高考和一个漫长的暑假，如同一场跨越一年的精神洗礼，让我拥有了与以前全然不同的心境。军训刚刚结束，大学生活（封控）伊始，我新注册了域名，在新电脑上架起了新的博客框架，从Hexo换成Hugo，从HEZ来到SJTU，以新的姿态开启新的旅途…… 上面这段将是（希望是）这个网站里第一段且唯一一段带有一丝丝文学色彩的片段。我太讨厌文学类作文了。 ","date":"2022-09-16","objectID":"/posts/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/:0:0","tags":["建站","前端"],"title":"新的开始","uri":"/posts/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/"},{"categories":["日常"],"content":"我为什么归档之前的博客 博客早期截图 study.pistol.city是我在高一至高二用Hexo框架精心搭建的网站，先后折腾了几个主题，也积累了一定经验，是我高中期间课内学习和课外折腾的很好写照。但是，也正如上文所言，我希望能有个新的开始，能与高中阶段有一个超越表层意义的跨越。这自然也需要在我折腾的地方体现出来。于是我备份了所有markdown文件和几经魔改的主题文件夹， 让这份记忆长存于0和1之中。 ","date":"2022-09-16","objectID":"/posts/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/:0:1","tags":["建站","前端"],"title":"新的开始","uri":"/posts/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/"},{"categories":["日常"],"content":"我为什么选用HUGO搭建新的博客 一方面是对新事物的好奇，人总是喜新厌旧想尝试新的东西，所以我选择放弃Hexo。HUGO是用Go语言编写的博客框架，得益于语言优势，相较竞争对手拥有更轻量的文件体积和更快的加载速度。近几年来，活跃的HUGO社区也涌现出了大量优质的主题作品和扩展内容，例如LeaveIt→KeepIt→LoveIt→FixIt的主题二创流就特别能体现出创作者们的用心。这次选择了一款简约的主题，希望能因此更加专注于学习和写作。 愿顺遂！ ","date":"2022-09-16","objectID":"/posts/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/:0:2","tags":["建站","前端"],"title":"新的开始","uri":"/posts/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/"}]