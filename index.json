[{"categories":["数学"],"content":"《微积分》第二章极限与连续的若干定理与一些理解。 关于\r本文并非完整的知识梳理，而是复习过程中对不太熟悉的内容的再认识。为自用之需。\r","date":"2022-10-15","objectID":"/posts/%E6%9E%81%E9%99%90%E4%B8%8E%E8%BF%9E%E7%BB%AD/:0:0","tags":["学业","笔记","微积分"],"title":"极限与连续","uri":"/posts/%E6%9E%81%E9%99%90%E4%B8%8E%E8%BF%9E%E7%BB%AD/"},{"categories":["数学"],"content":"数列极限 有界数列：既有上界又有下界（函数与此相同） 用定义证明数列极限：对$|数列-极限|$往大放缩，得到较简单的关于n的式子，使其小于$\\varepsilon$，得到形如$n\u003ef(\\varepsilon)$的式子，根据放缩时n的条件，去$N=\\max(放缩条件最小值，[f(\\varepsilon)])$，则n\u003eN时必有$|数列-极限|\u003c\\varepsilon$ 无穷小量简称无穷小，不是数，而是数列或函数。同理有无穷大。 唯一性：如果一个数列的极限可以用A或B表示，则A=B 保序性：如果a数列的极限大于b数列，那么在n足够大时，$a_n\u003eb_n$ 保号性：如果a数列的极限为A，那么在n足够大时，$|a_n|\u003e|\\frac{A}{2}|$（两者同号）；n足够大时，$a_n$的符号可以决定A的符号。 有界性和归并性我不知道它在干啥。其实保序性、保号性和唯一性也是，莫名其妙，显然的东西一定要搞得很复杂，还自认为是严谨。 数列极限存在判定： 夹逼定理（可求极限）：分别往大和往小放缩，得到的两个数列极限相同，那么该数列极限就是这个极限。 单调有界数列极限存在定理（用于判定极限存在）：单调增（减）+有上（下）界=收敛。这里的证明经常会用到放缩、数归等高中方法。 区间套定理：等价于确界存在定理和单调有界数列极限存在定理，对一般证明没什么用 ","date":"2022-10-15","objectID":"/posts/%E6%9E%81%E9%99%90%E4%B8%8E%E8%BF%9E%E7%BB%AD/:1:0","tags":["学业","笔记","微积分"],"title":"极限与连续","uri":"/posts/%E6%9E%81%E9%99%90%E4%B8%8E%E8%BF%9E%E7%BB%AD/"},{"categories":["数学"],"content":"函数极限 极限的定义是去心邻域中无限接近的值 左极限和右极限都为A$\\Leftrightarrow$该处极限为A 用定义证明函数在$x_0$处的极限A：对任意正数$\\varepsilon$，尝试找到一个用$\\varepsilon$表示的$\\delta$，取$0\u003c|x-x_0|\u003c\\delta$，使得$|f(x)-A|$通过放大后得到的g(x)在$|x-x_0|=\\delta$处恰好等于$\\varepsilon$。简单来说就是把$|f(x)-A|$往大的放缩，让得到的式子仍然是无穷小，只是通过一个$\\delta$来控制x的取值（逼近$x_0$）。 $\\lim_{x \\to \\infty} =A\\ 代表\\ \\lim_{x \\to +\\infty} =A\\ 且\\ \\lim_{x \\to -\\infty} =A$ 海涅定理：f(x)在a处极限为A$\\Leftrightarrow$对极限为a的数列$x_n$，$f(x_n)$的极限为A。有点难用。好像经常用于带三角函数的时候。 可用于证明极限不存在或函数发散，只需找到一个数列，使得其极限落在a(或$\\infty$)处，再把数列代入函数，证明其无穷大即可；或者找到两个数列极限落在a处，证明其极限不相等。 其他应用场景限于个人能力尚不明确 唯一性同数列 局部有界性，局部保序性，局部保号性都是针对函数在a的邻域处的性质，内容基本同数列 同样有针对无穷的保序性、保号性，不知道能不能直接用 夹逼定理、单调有界函数单侧极限存在定理同数列 求极限常用到的两个重要极限：$$\\lim_{x \\to 0}\\frac{\\sin x}{x}=1\\ ;\\ \\lim_{x \\to 0}(1+\\frac{1}{x})^x=e$$ 常见等价无穷小： $$\\sin x\\sim x,\\ \\tan x\\sim x,\\ 1-\\cos x\\sim \\frac{1}{2}x^2\\\\ln(1+x)\\sim x,\\ e^x-1\\sim x,\\ (1+x)^\\alpha-1\\sim \\alpha x\\ \\arcsin x\\sim x,\\ \\arctan x\\sim x$$ 无穷小的计算时要注意相减时主部不能相消 ","date":"2022-10-15","objectID":"/posts/%E6%9E%81%E9%99%90%E4%B8%8E%E8%BF%9E%E7%BB%AD/:2:0","tags":["学业","笔记","微积分"],"title":"极限与连续","uri":"/posts/%E6%9E%81%E9%99%90%E4%B8%8E%E8%BF%9E%E7%BB%AD/"},{"categories":["数学"],"content":"连续函数 在$x_0$处连续：$f(x_0)$存在，$\\lim_{x\\to x_0}f(x)$存在，且两者相等。据此证明函数连续。 初等函数都连续，可以直接用。 左连续、右连续：包含该点。左连续\u0026\u0026右连续$\\Leftrightarrow$连续 间断点分类： 第一类间断点（左右极限均存在）：可去间断点（左右相等但中间未定义），可移间断点（左右相等但中间跳跃），跳跃间断点（左右不等） 第二类间断点：无穷间断点，振荡间断点（字面意思） 闭区间上连续函数的性质： 有界性：闭区间，连续，则有界（离谱） 最大值最小值定理：闭区间内肯定能选出最大和最小值（显然） 零点存在定理 介值定理：闭区间[a,b]上，对$\\forall c\\in [f(a),f(b)],\\ \\exists \\xi\\in[a,b]$ ，使得$f(\\xi)=c$ ","date":"2022-10-15","objectID":"/posts/%E6%9E%81%E9%99%90%E4%B8%8E%E8%BF%9E%E7%BB%AD/:3:0","tags":["学业","笔记","微积分"],"title":"极限与连续","uri":"/posts/%E6%9E%81%E9%99%90%E4%B8%8E%E8%BF%9E%E7%BB%AD/"},{"categories":["资源"],"content":" 不想错过DDL？Canvas LMS的邮件推送功能不够直观？ Microsoft Todo和Canvas的联动或许是你的不二之选。 ","date":"2022-10-13","objectID":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/:0:0","tags":["学业","工具"],"title":"Todosync:利用Github Actions自动将Canvas内容同步至Microsoft Todo","uri":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/"},{"categories":["资源"],"content":"前言 在了解到这个工具之前，我一直受canvas反馈功能不够全面的困扰。虽然有日历馈送，但并不是每个老师每个作业都会设置DDL，而且完成之后也没法在日历上删除。直到有一天，我在水源社区刷到了这个帖： 【TodoSync】自动将 Canvas 的作业、公告等同步到 Microsoft Todo 我超这可太牛逼了。 我本人一直是Todolist的重度使用者，感觉失去了Todolist就没有了方向。在使用了iOS系统的大量app，甚至氪了近200买一些app的会员之后，我负责任地说Microsoft Todo，不仅免费，而且用起来最顺手。而这款Todosync对我来说，简直就是专业对口。 ","date":"2022-10-13","objectID":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/:1:0","tags":["学业","工具"],"title":"Todosync:利用Github Actions自动将Canvas内容同步至Microsoft Todo","uri":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/"},{"categories":["资源"],"content":"使用教程 Tip\r本教程供电脑小白食用，有基础可直接移步原教程。本教程部分截图资源来自原教程。\r注意\r本教程仅适用于Windows10或11系统\r","date":"2022-10-13","objectID":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/:2:0","tags":["学业","工具"],"title":"Todosync:利用Github Actions自动将Canvas内容同步至Microsoft Todo","uri":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/"},{"categories":["资源"],"content":"注册Github账号（已有可跳过） 都2022年了不会还有人没注册Gayhub罢 前往Github官网，点击首页的``Sign up for Github`，然后依次输入你的邮件地址，创建密码，创建用户名，最后y/n是是否接收邮件推送。 然后完成邮箱验证，就注册成功了。 ","date":"2022-10-13","objectID":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/:2:1","tags":["学业","工具"],"title":"Todosync:利用Github Actions自动将Canvas内容同步至Microsoft Todo","uri":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/"},{"categories":["资源"],"content":"配置Canvas Token 创建Fork 前往Todosync的仓库，点击右上角的Fork复制整个仓库 然后会进入下图这个界面（本教程采用小号演示，add-verb不是我的常用Github账号） 注意\r记得取消勾选Copy the master branch only\r取消勾选后即可Create fork 生成Canvas许可证 登录canvas，进入账户-设置 点击“创建新访问许可证” “用途”随意填写，“过期”留空，这样不需要重新创建 点击“生成令牌“，然后复制那一串令牌。 创建Action Secret Tip\r此部分在刚才fork的仓库进行。请进入你复制的仓库，而不是作者原来的仓库。\r来到你自己的仓库，这时你的仓库标题下应该会有一行小字forked from 1357310795/TodoSync 进入Settings 选择“Secrets - Actions”，点击“New repository secret” Name为CANVAS_TOKEN，Value为刚才复制的令牌，完成后点击Add Secret 完成后如图所示 ","date":"2022-10-13","objectID":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/:2:2","tags":["学业","工具"],"title":"Todosync:利用Github Actions自动将Canvas内容同步至Microsoft Todo","uri":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/"},{"categories":["资源"],"content":"配置Graph Token 下载这个生成工具。此链接是1.0版本，需要最新版本请前往Releases界面下载。浏览器可能会提示软件不安全，那就坚持保留。我们要相信学长。 令牌生成工具\rhttps://github.com/1357310795/TodoSync/releases/download/v1.0/TodoSynchronizer.QuickTool.exe\r打开下载的工具，点击“获取 Graph 认证”，跳转到浏览器 授权 MyTodoApp。如果浏览器没有登录Microsoft账号，可能需要先登录。 Tip\r请务必核对权限与下图是否一致，以及Microsoft账号是否与Microsoft Todo使用的账号相同。\r完成后，回到程序，系统会自动生成秘钥，点击确定即可。完成后不要关闭程序 前往自己fork的仓库，如图所示切换到graphtoken分支 编辑 graphtoken.asc 文件 复制程序中的一大串非中文字符，粘贴进来（把原先的覆盖掉，注意不要有多余的换行），直接Commit Changes Tip\r注意和下一步区分中文字符串和非中文字符串，两处填写内容不同，此处为凭证，下面是秘钥。\r再次到Settings的“Secrets”里，创建一个新条目，“Name”为“KEY”，“Value”为程序中的一串中文字符 点击Add secret，完成Graph Token的创建 ","date":"2022-10-13","objectID":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/:2:3","tags":["学业","工具"],"title":"Todosync:利用Github Actions自动将Canvas内容同步至Microsoft Todo","uri":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/"},{"categories":["资源"],"content":"启动定时任务（Github Actions） 在自己fork的仓库，点击Actions选项卡，点击绿色按钮启用。 在左侧选择“TodoSync”，右侧点击“Run workflow” 此时workflow已经开始运行，一分钟左右就能在你的Microsoft Todo里面看到Canvas的待办事项了。 刷新页面后可以进入Action查看程序运行详情，如果遇到报错，可以在评论区交流。 编辑仓库根目录下的 config.yaml 文件，可以调整同步程序设置 ","date":"2022-10-13","objectID":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/:2:4","tags":["学业","工具"],"title":"Todosync:利用Github Actions自动将Canvas内容同步至Microsoft Todo","uri":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/"},{"categories":["资源"],"content":"常见问题 Tip\r转自原教程，真的有问题还是要去找原作者。\rFork 的仓库能不能设置为 Private？ 对于公开仓库，GitHub Actions 是免费的；而对于私有仓库，GitHub Actions 每个月有 2000 分钟的免费额度，超出会有巨额收费（在这里看用量）。本项目每次运行大约需要 2min，也就是说每个月顶多能运行 1000 次，可能不够用。强烈建议保持仓库为公开状态。 为什么步骤这么复杂？我的账号、Token 安全吗？ 复杂的配置步骤就是为了保证账号和令牌的安全性。Canvas Token 的安全性由 GitHub 保证，Graph Token 的安全性由 AES 算法保证。 为什么不直接把 Graph 的 AccessToken/RefreshToken 保存到 Secrets，像 Canvas Token 那样？ AccessToken 的有效期只有 1 小时，RefreshToken 的有效期可能是 90 天（参考这里，我看不明白）。为确保令牌永不过期，需要在每次运行时更新令牌。Secrets 不支持使用 Action 操作更新，故只能将令牌加密后保存到存储库的 graphtoken 分支，密钥保存在 Secrets 内。 授权 MyTodoApp 有什么风险？如何取消此授权？ 正如授权时显示的应用权限所示，“创建、读取、更新和删除你的任务和计划”和“保持对已向 MyTodoApp 授予访问权限的数据的访问权限”是应用正常运行必须的权限，“读取您的个人资料”用于验证登录。程序不会也不可能索要您的敏感信息。在这里可以管理连接到 Microsoft 账户的应用。 无法登录微软账号？该 Microsoft 帐户不存在？ 换用个人邮箱注册的账号，不要用学校/机构的账号。 GitHub Action 运行失败？ 如果不明白为什么失败，到原仓库提交 issue 如果仓库设置为 Public，如何隐藏我的课程信息？ 编辑config.yaml文件，把VerboseMode改成false ","date":"2022-10-13","objectID":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/:3:0","tags":["学业","工具"],"title":"Todosync:利用Github Actions自动将Canvas内容同步至Microsoft Todo","uri":"/posts/%E5%88%A9%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%B0%86canvas%E5%86%85%E5%AE%B9%E5%90%8C%E6%AD%A5%E8%87%B3microsoft-todo/"},{"categories":["校内工作"],"content":"\r信息\r早前在公众号发布\r警告\r本文不含图片和视频，需要请前往上面的链接\r2022年10月，在为祖国庆生之余，电院2227班团支部响应校团委号召，结合疫情形势和支部特点，开展了“喜迎国庆展风采，我与祖国共奋进”团改金活动。 活动以爱国主义为核心，通过多种呈现形式，增进了支部内部和支部间的友谊，丰富了同学们的假期生活，培养了团员们的入党积极性。活动采用线上和线下相结合的方式，其中线下活动开展于10月1日，届时疫情形势并不严峻。 ","date":"2022-10-09","objectID":"/posts/%E5%9B%BD%E5%BA%86%E5%9B%A2%E6%97%A5%E6%B4%BB%E5%8A%A8/:0:0","tags":["团支部","公众号","疫情"],"title":"行令酌兕酒，庆生聚同俦 | SJTU工信2227班国庆团日活动","uri":"/posts/%E5%9B%BD%E5%BA%86%E5%9B%A2%E6%97%A5%E6%B4%BB%E5%8A%A8/"},{"categories":["校内工作"],"content":"线上推优 | 一心向党 共青团推优工作是新时期党的助手和后备力量作用的最高政治体现，是共青团发挥作用的体现。 本次团推优工作以线上会议方式进行，参与推优的共有4名团员。四位团员都简短介绍了自己的履历，说明了青年大学习情况，表达了对入党的向往和支持中国共产党的决心。通过投票表决，刘新玥、张鸣宇、蒙璐、王镜源四位推优候选人均以高支持率通过了推优。 ","date":"2022-10-09","objectID":"/posts/%E5%9B%BD%E5%BA%86%E5%9B%A2%E6%97%A5%E6%B4%BB%E5%8A%A8/:0:1","tags":["团支部","公众号","疫情"],"title":"行令酌兕酒，庆生聚同俦 | SJTU工信2227班国庆团日活动","uri":"/posts/%E5%9B%BD%E5%BA%86%E5%9B%A2%E6%97%A5%E6%B4%BB%E5%8A%A8/"},{"categories":["校内工作"],"content":"支部联谊 | 欢度国庆 对于刚刚踏入大学校园，又在疫情的阴霾下隔离了半个月的我们来说，一次联谊无疑是绝佳的认识新朋友、提高凝聚力的活动。趁寒潮还在华北酝酿，抓住夏天的尾巴，迎着国庆节的晚风，我们在电院大草坪同工科信息2211班和2222班一起举办了支部联谊。 长时间的隔离使我们虽然隔宿舍相望，却几乎素不相识。但是，几轮智力游戏迅速粉碎了一切尴尬的可能性。欢笑声中，更是同学们面对疫情不熄的青春之火与智慧之光。 随后，同学们分成三个小组，分享故事，共话未来与理想。活动和讨论声一同进入高潮，在这个对国家来说希望和挑战并存的年代，在祖国的生日之夜，青年的一句话语，可能在未来就变成了一把火炬，指引着一些人前行的路。 ","date":"2022-10-09","objectID":"/posts/%E5%9B%BD%E5%BA%86%E5%9B%A2%E6%97%A5%E6%B4%BB%E5%8A%A8/:0:2","tags":["团支部","公众号","疫情"],"title":"行令酌兕酒，庆生聚同俦 | SJTU工信2227班国庆团日活动","uri":"/posts/%E5%9B%BD%E5%BA%86%E5%9B%A2%E6%97%A5%E6%B4%BB%E5%8A%A8/"},{"categories":["校内工作"],"content":"重读经典 | 铭记先辈 小组讨论之后，大家围坐成一圈，由团支书给同学们讲述经典红色故事。不过，为了调动大家的活动积极性，团支书有意在故事中放了几个错误，让团员同学纠正。这些错误有时蕴含着丰富的历史知识，有时也明显且幽默，引得大家捧腹。欢乐之余，则是对老一辈革命者奋斗历程的追思、敬佩与缅怀，是铭记历史、不忘本来、面向未来的责任与勇气。 酒红色的云霞褪成深蓝色的夜空，嘈杂的傍晚滑入寂静的深宵，欢聚与散场间只是一瞬。回忆不是活在过去，而是更好地迈向前路；知足于当下，既然幸运地生在这个年代，就应该担起同等的重任。所谓“士不可以不弘毅，任重而道远。” ","date":"2022-10-09","objectID":"/posts/%E5%9B%BD%E5%BA%86%E5%9B%A2%E6%97%A5%E6%B4%BB%E5%8A%A8/:0:3","tags":["团支部","公众号","疫情"],"title":"行令酌兕酒，庆生聚同俦 | SJTU工信2227班国庆团日活动","uri":"/posts/%E5%9B%BD%E5%BA%86%E5%9B%A2%E6%97%A5%E6%B4%BB%E5%8A%A8/"},{"categories":["日常"],"content":"9月13日，上海交通大学正式开学。早八的线性代数，十点的体育网课，一切都看起来非常对劲，作为新生，我们也准备好了正式学习的开始。 没有想到，这节早八是九月的最后一节线下课。 中午，我和隔壁2226班的负责人一起前往教材科结清了教材的款项，并冒着小雨步行来到了上院，准备上军事理论课。到达之后，发现里面空无一人，疑惑地坐下之后，打开微信，方才意识到问题所在。 新疆返沪，隐瞒病情，进校后核酸检测显阳性。 我们继续在上院听课，但一小时之后，便有老师来把我们叫回了寝室。 没有人在听课，路上或是匆匆离开的校外人员，或是排队囤货的同学老师，秋雨绵绵，颇有末日来临前的光景。 寝室里的食物不多，于是我和隔壁几个寝室的同学前去购买物资。大部分商店的库存已经在前几个小时内被扫荡一空，陈同学介绍的隐蔽的罗森虽然还有不少存货，品种却所剩无几。买完之后，小雨已经变成了大雨，我们一路踏着水坑，狼狈地回到了寝室。 从那之后，14天，我再没了自由。 刚开始的隔离可谓坐牢。紧急情况方才开始，隔离餐不及时，物资匮乏，餐食堪称极差。通知说封控两天，但两天后就变成了七天。 前两天的饭点甚至都非常离谱，最晚的午饭时间一度达到2点多。 我们在寝室里上着网课，除了刷视频和打游戏好像就再没了别的乐趣。刚刚认识不久的室友，也不像相处很久的兄弟一样能放开玩、彻夜聊天。 与此同时，每天都有密接被转运到隔离酒店，以及这些人所在寝室不断被封控。实际上，最终，只有一个寝室楼自始至终没有封控。我的不少同学和朋友也被转运，看到他们酒店里优越的住宿环境，我当时还一度有些羡慕。 与此同时，台风“梅花”强势在上海二次登陆。宿舍楼在暴风骤雨中岿然不动，但同学们的心态却愈发摇摇欲坠。 台风吹倒了楼下的一棵大树，砍树的声音在第二天把所有人吵醒。 这一天是9月15日，疯狂星期四，但是v不了50。 9月16日晚，封傻了的同学们在寝室楼间大声赞美复旦大学、同济大学、上海财经大学、华东师范大学等院校，并唱起歌曲。我拍下了这段视频： 视频拍摄于22:36,，18分钟后，也就是22:54，我接到了转运通知。这首《奇迹再现》仿佛是为我送行的绝唱。 为了预防马上转运，我很快收拾好了所有行李，然后躺在床上等通知，然而0点也没有电话打来，于是我准备先在寝室过了今晚。 第二天早上，我意料之中地看到了难得一见的红码。 ","date":"2022-09-20","objectID":"/posts/%E9%9A%94%E7%A6%BB%E8%AE%B0%E4%B8%8A/:0:0","tags":["疫情","隔离"],"title":"隔离记（上）","uri":"/posts/%E9%9A%94%E7%A6%BB%E8%AE%B0%E4%B8%8A/"},{"categories":["程序设计"],"content":"隔离在浦东的第二天，精神振奋且萎靡  ，百无聊赖，于是又登上洛谷开始新一次的C++康复训练。 题目本身比较简单，能够AC算法也容易想。但是正因为简单，这道题的解法拥有更强的开放性，研究起来也更加上头。 原题链接：P5461 赦免战俘 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn) ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:0:0","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"原题呈现 赦免战俘（洛谷月赛） ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:1:0","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"题目背景 借助反作弊系统，一些在月赛有抄袭作弊行为的选手被抓出来了！ ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:1:1","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"题目描述 现有 $2^n\\times 2^n (n\\le10)$ 名作弊者站成一个正方形方阵等候 kkksc03 的发落。kkksc03 决定赦免一些作弊者。他将正方形矩阵均分为 4 个更小的正方形矩阵，每个更小的矩阵的边长是原矩阵的一半。其中左上角那一个矩阵的所有作弊者都将得到赦免，剩下 3 个小矩阵中，每一个矩阵继续分为 4 个更小的矩阵，然后通过同样的方式赦免作弊者……直到矩阵无法再分下去为止。所有没有被赦免的作弊者都将被处以棕名处罚。 给出 $n$，请输出每名作弊者的命运，其中 0 代表被赦免，1 代表不被赦免。 ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:1:2","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"输入格式 一个整数 $n$。 ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:1:3","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"输出格式 $2^n \\times 2^n$ 的 01 矩阵，代表每个人是否被赦免。数字之间有一个空格。 ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:1:4","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"样例 #1 样例输入 #1 3 样例输出 #1 0 0 0 0 0 0 0 1\r0 0 0 0 0 0 1 1\r0 0 0 0 0 1 0 1\r0 0 0 0 1 1 1 1\r0 0 0 1 0 0 0 1\r0 0 1 1 0 0 1 1\r0 1 0 1 0 1 0 1\r1 1 1 1 1 1 1 1 ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:1:5","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"题解 ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:2:0","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"函数递归模拟 常规解法，一遍AC。开O2之后时间也比较充裕。 很容易想到的方法就是直接从原正方形开始，每次分成四个区域，把第一个区域的值赋为0，然后依次递归另外三个区域，直到递归到的正方形边长为1为止。 代码 #include\u003cbits/stdc++.h\u003e using namespace std; int n; bool remit[2000][2000]; void divide(int a,int x0,int y0) { if(a==1) return; //当不能再分的时候回退到上一层 a\u003e\u003e=1; for(int i=x0;i\u003cx0+a;i++) for(int j=y0;j\u003cy0+a;j++) remit[i][j]=0; //继续分下一层，递归 divide(a,x0+a,y0); divide(a,x0,y0+a); divide(a,x0+a,y0+a); return; } void output() //繁琐的输出，不想写进主函数 { for(int i=0;i\u003cn;i++){ for(int j=0;j\u003cn;j++){ cout\u003c\u003cremit[i][j]; if(j\u003cn-1) cout\u003c\u003c' '; } cout\u003c\u003cendl; } } int main() { cin\u003e\u003en; n=1\u003c\u003cn; memset(remit,1,sizeof(remit)); //初始化整个数组为1 divide(n,0,0); output(); return 0; } ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:2:1","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"数论（找规律） 从时间消耗和空间占用来看，这个算法应该是三个算法中最佳的。由于只和i和j的值有关，内存占用来到了惊人的371B。 注意到，这个输出的正方形一定是对称的。对称性是通向数学巧解的钥匙。我们标出每个战俘对应的行号和列号，再来观察一下这个输出： remit[][] 0 1 2 3 4 5 6 7 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 2 0 0 0 0 0 1 0 1 3 0 0 0 0 1 1 1 1 4 0 0 0 1 0 0 0 1 5 0 0 1 1 0 0 1 1 6 0 1 0 1 0 1 0 1 7 1 1 1 1 1 1 1 1 似乎还是不太明显 由于这个题目条件和2的乘方有很大关联，我们不妨试试吧行列号写成二进制： remit[][] 000 001 010 011 100 101 110 111 000 0 0 0 0 0 0 0 1 001 0 0 0 0 0 0 1 1 010 0 0 0 0 0 1 0 1 011 0 0 0 0 1 1 1 1 100 0 0 0 1 0 0 0 1 101 0 0 1 1 0 0 1 1 110 0 1 0 1 0 1 0 1 111 1 1 1 1 1 1 1 1 既然是二进制了，那就躲不开位运算。适当观察，可以发现，remit[i][j]的值由i和j决定。当i|j==111，也就是i|j==2^n-1，那么remit[i][j]=1，否则为0。 这个通过找规律观察出来的结论用数论证明也不难。读者自证 还是写一下，权当练习证明逻辑性罢 数学说明 欲证，即证$i|j$有任何一位为0时，remit[i][j]即为0。 $(i,j)$在边长为$2^k$的正方形（任意位置）的左上部分$\\Leftrightarrow [(i\\% (2^k))/2^{k-1}]=0$且$[(j\\% (2^k))/2^{k-1}]=0$，其中$\\%$代表前者对后者取余数。 而i的二进制表示中，$[(i\\% (2^k))/2^{k-1}]$表示的恰恰就是权值为$2^{k-1}$的那位。而$ [(i\\% (2^k))/2^{k-1}]=0$且$[(j\\% (2^k))/2^{k-1}]=0\\Leftrightarrow i|j$在这一位上是0。 所以，只需对每一个k都判断一遍该位是否i和j都为零即可。 反过来，当没有0时，就有$i|j=2^n-1$，根据这个式子判断，不需要循环，更加优美。 代码 #include\u003cbits/stdc++.h\u003e using namespace std; int n; int main() { cin\u003e\u003en; n=1\u003c\u003cn; //预先处理n的值，简化后续代码 因此注意后续代码中n就是原来的2^n-1 for(int i=0;i\u003cn;i++) { for(int j=0;j\u003cn;j++) { bool tmp=(i|j)!=(n-1)?0:1; //用一下单行if XD 看着更简洁点 if(j\u003cn-1) cout\u003c\u003ctmp\u003c\u003c' '; //听说洛谷现在已经不查行末空格的问题了，不知道是不是真的 else cout\u003c\u003ctmp; } cout\u003c\u003cendl; } return 0; } ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:2:2","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":["程序设计"],"content":"类杨辉三角（转自这篇题解） 时间复杂度和法二几乎一样，但是相比法二空间占用更大，需要开数组。 其实和法二的核心是一样的，只是用一个更常见的模型套了一下，可能会更好理解和运用。 每一个数字都是它上方数字加上右上方数字再模2。 其实就是不进位加法，异或一下就好了。 代码（经过微调） #include\u003cbits/stdc++.h\u003e #define re register using namespace std; int n; int a[1234][1234]; int main() { scanf(\"%d\",\u0026n); n = (1\u003c\u003cn); a[0][n+1] = 1; for(re int i=1;i\u003c=n;++i) { for(re int j=1;j\u003c=n;++j) { a[i][j] = a[i-1][j] ^ a[i-1][j+1]; printf(\"%d \",a[i][j]); } printf(\"\\n\"); } return 0; } ","date":"2022-09-19","objectID":"/posts/%E6%B4%9B%E8%B0%B7p5461/:2:3","tags":["C++","洛谷"],"title":"洛谷P5461的几种解法","uri":"/posts/%E6%B4%9B%E8%B0%B7p5461/"},{"categories":null,"content":" 你好  我是Andreo Yang，现在就读于上海交通大学电子信息与电气工程学院2022级，平时喜欢弹钢琴 但是交大琴房实在订不到 ，打球，还偶尔录MC视频，搞一下后期，发到我的bilibili上 。 虽然是公开的博客，但是由于不打算搞SEO，几乎也是私人的空间啦。能找到这里的你确实不容易，如果想交个朋友，在首页有我的社交网站链接，随时来打扰 做个人博客的想法我从初一就有了，可惜文澜中学拱墅监狱没有给我太多自由发展的机会。断断续续直到初二，才用Github Pages  做出了第一个博客（也是厉害 只用github都行）。初三时接触了Hexo，使用mellow主题搭建了一个现在看来确实像模像样的博客，并且也写了几篇洛谷的题解。 高中时常常间歇性发Hexo瘾，有一下没一下地更新网站、换主题、折腾CSS。先后用过Vexo，Melody，Butterfly等三个主题，也留下了几十篇课内外的整理、思考。至于我现在为什么归档了之前的博客，换用了新的框架，都写在这里啦。  希望你在我的博客逛得开心！也欢迎在下方交流评论  或者添加友链哦 ","date":"2022-09-16","objectID":"/about/:0:0","tags":null,"title":"About Me","uri":"/about/"},{"categories":null,"content":"\u003cno value\u003e's friends","date":"2022-09-16","objectID":"/friends/","tags":null,"title":"Friends","uri":"/friends/"},{"categories":null,"content":" 欢迎在下方留言交换友链！ 交换格式： - nickname: #昵称 avatar: #头像链接 url: #个人网站地址 description: #简短的网站介绍 你可能需要的此网站信息 昵称: Andreo Y. 网站名称: Andreo Y.'s space 网站地址: https://andreoy.cn 永久地址: https://hzyangjc.github.io 头像: https://pigco-1313228125.cos.ap-shanghai.myqcloud.com/img/JQAeX6iE9f1RKTu.jpg 介绍: To sail beyond the sunset. ","date":"2022-09-16","objectID":"/friends/:0:0","tags":null,"title":"Friends","uri":"/friends/"},{"categories":["日常"],"content":"高三，高考和一个漫长的暑假，如同一场跨越一年的精神洗礼，让我拥有了与以前全然不同的心境。军训刚刚结束，大学生活（封控）伊始，我新注册了域名，在新电脑上架起了新的博客框架，从Hexo换成Hugo，从HEZ来到SJTU，以新的姿态开启新的旅途…… 上面这段将是（希望是）这个网站里第一段且唯一一段带有一丝丝文学色彩的片段。我太讨厌文学类作文了。 ","date":"2022-09-16","objectID":"/posts/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/:0:0","tags":["建站","前端"],"title":"新的开始","uri":"/posts/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/"},{"categories":["日常"],"content":"我为什么归档之前的博客 博客早期截图 study.pistol.city是我在高一至高二用Hexo框架精心搭建的网站，先后折腾了几个主题，也积累了一定经验，是我高中期间课内学习和课外折腾的很好写照。但是，也正如上文所言，我希望能有个新的开始，能与高中阶段有一个超越表层意义的跨越。这自然也需要在我折腾的地方体现出来。于是我备份了所有markdown文件和几经魔改的主题文件夹， 让这份记忆长存于0和1之中。 ","date":"2022-09-16","objectID":"/posts/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/:0:1","tags":["建站","前端"],"title":"新的开始","uri":"/posts/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/"},{"categories":["日常"],"content":"我为什么选用HUGO搭建新的博客 一方面是对新事物的好奇，人总是喜新厌旧想尝试新的东西，所以我选择放弃Hexo。HUGO是用Go语言编写的博客框架，得益于语言优势，相较竞争对手拥有更轻量的文件体积和更快的加载速度。近几年来，活跃的HUGO社区也涌现出了大量优质的主题作品和扩展内容，例如LeaveIt→KeepIt→LoveIt→FixIt的主题二创流就特别能体现出创作者们的用心。这次选择了一款简约的主题，希望能因此更加专注于学习和写作。 愿顺遂！ ","date":"2022-09-16","objectID":"/posts/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/:0:2","tags":["建站","前端"],"title":"新的开始","uri":"/posts/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/"}]